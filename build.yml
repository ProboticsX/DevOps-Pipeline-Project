setup: 
  - sudo apt-get update -y
  - sudo apt-get install git wget -y
  - sudo apt-get install -qq -y debconf-utils
  - export DEBIAN_FRONTEND="noninteractive"  
  - sudo apt install jq -y 
  - sudo apt install nodejs -y
  - sudo apt install npm -y  
 
Variable:
  - DEBIAN_FRONTEND="noninteractive"

jobs:
  - name: itrust-build
    clone:
      - name: remove iTrust if it already exists
        run: rm -rf iTrust2-v10
      - name: clone itrust
        run: git clone https://token@github.ncsu.edu/engr-csc326-staff/iTrust2-v10.git
    sql_setup:
      - name: Setup SQL
        run: echo \"mysql-server mysql-server/root_password password passwd\" | sudo debconf-set-selections
      - name: SQL 
        run: echo \"mysql-server mysql-server/root_password_again password passwd\" | sudo debconf-set-selections
      - name: create application.yml file
        run: cp iTrust2-v10/iTrust2/src/main/resources/application.yml.template iTrust2-v10/iTrust2/src/main/resources/application.yml 
      - name: set password in application.yml
        run: sed -i 's/password\:/password\:\ passwd/g' iTrust2-v10/iTrust2/src/main/resources/application.yml
      - name: install mysql
        run: sudo apt-get install -y mysql-server   
    steps: 
      - name: Install Maven
        run: sudo apt-get install maven -y
      - name: Set path
        run: export PATH=/opt/apache-maven-3.8.4/bin:$PATH
      - name: install JRE
        run: sudo apt-get install default-jre -y
      - name: install JDK
        run: sudo apt-get install openjdk-11-jdk -y     
      - name: test iTrust1
        run: cd iTrust2-v10/iTrust2 && mvn --batch-mode --update-snapshots clean test

  - name: mutation-coverage
    iterations: 2
    snapshots:
      - http://localhost:3000/survey/upload.md
      - http://localhost:3000/survey/long.md
      - http://localhost:3000/survey/survey.md
      - http://localhost:3000/survey/variations.md
    clone:
      - name: remove checkbox.io-micro-preview if it already exists
        run: rm -rf checkbox.io-micro-preview
      - name: remove screenshot if it already exists
        run: rm -rf screenshot
      - name: remove referenceSnaps if it already exists
        run:  rm -rf referenceSnaps
      - name: clone checkbox micro-preview
        run: git clone https://token@github.com/chrisparnin/checkbox.io-micro-preview
      - name: clone screenshot
        run: git clone https://token@github.com/ruttabega/screenshot
    send_files_to_vm:
      - name: copy screenshot.json
        run: cp /bakerx/screenshotDetails.json ~/screenshotDetails.json"
      - name: copy final.sh
        run: cp /bakerx/final.sh . 
      - name: replace in final.sh
        run:  sed -i 's/\\r//g' final.sh
      - name: copy screenshot.js
        run: cp -f /bakerx/screenshot.js  /home/vagrant/screenshot/screenshot.js
    steps:
      - name: Installations
        run: sudo apt-get install -y imagemagick chromium-browser
      - name: setup snapshot
        run: cd screenshot && npm i && sudo npm link
      - name: run service
        run: cd checkbox.io-micro-preview && npm install express && sudo npm install forever -g && sudo npm install escodegen && sudo npm install esprima && forever start index.js
      - name: Install libraries for snapshot utility
        run: sudo apt-get install gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget -y
      - name: take screenshot of upload.md
        run: mkdir referenceSnaps && cd referenceSnaps && sudo apt-get install -y libgbm-dev && screenshot http://localhost:3000/survey/long.md ref_long && screenshot http://localhost:3000/survey/survey.md ref_survey && screenshot http://localhost:3000/survey/upload.md ref_upload && screenshot http://localhost:3000/survey/variations.md ref_variations
      - name: stop service
        run: cd checkbox.io-micro-preview && forever stop index.js
      - name: copy mutate.js
        run: cp /bakerx/mutate.js /home/vagrant/mutate.js && sudo npm install escodegen && sudo npm install esprima
      - name: Clean structure
        run: rm -rf /bakerx/mutation /home/vagrant/mutation
      - name: store mutation screenshots in the folders created 
        run: mkdir mutation && cd mutation && mkdir upload && mkdir long && mkdir survey && mkdir variations

  - name: itrust-deploy
    deployment_file_path: iTrust2-v10/iTrust2/target/iTrust2-10.jar
    application_name: iTrust2
    end_point: iTrust2/login
    execute_permission:
      - name: permit web-srv
        run: chmod 600 web-srv
    vm_steps: 
      - name: copy web-srv
        run: cp /bakerx/web-srv .ssh/
      - name: permit web-srv in VM
        run: chmod 600 .ssh/web-srv
      - name: package application
        run: cd iTrust2-v10/iTrust2/ && mvn package
      - name: install seige
        run: sudo apt install siege -y
    sql_setup:
      - name: configure mysql password
        run: echo "mysql-server mysql-server/root_password password passwd" | sudo debconf-set-selections
      - name: configure mysql password
        run: echo "mysql-server mysql-server/root_password_again password passwd" | sudo debconf-set-selections
      - name: install mysql-server
        run: sudo apt-get install -y mysql-server
      - name: start mysql
        run: sudo systemctl start mysql
    droplet_steps:
      - name: Update command
        run: sudo apt-get update
      - name: install JRE
        run: sudo apt install default-jre -y
      - name: install JDK
        run: sudo apt install openjdk-11-jdk -y
      - name: install Maven
        run: sudo apt install maven -y ; export PATH=/opt/apache-maven-3.6.3/bin:$PATH 
      - name: execute jar file
        run: java -jar iTrust2-10.jar > output.txt 2>&1 &
    proxy_steps:
      - name: Run the proxy server
        run: pipeline serve

  - name: F0_build
    steps:
      - name: Remove soMedia
        run: rm -rf soMedia
      - name: Install python 3.0
        run: sudo apt install python3.8
      - name: Clone the Django Project
        run: git clone https://github.com/MeNsaaH/soMedia.git
      - name: Update Apt
        run: sudo apt update
      - name: Install pip
        run: sudo apt install python3-pip
      - name: Install enviornment
        run:  cd soMedia && sudo apt install python3.8-venv
      - name: Create enviornment
        run: cd soMedia && python3 -m venv venv/
      - name: Activate enviornment
        run: cd soMedia && source venv/bin/activate
      - name: Install django
        run: python3 -m pip install django==2.2.13
      - name: Install pillow
        run: cd soMedia && pip install pillow
      - name: Install pytz
        run: python3 -m pip install pytz==2019.1
      - name: Install sqlparse
        run: python3 -m pip install sqlparse==0.3.0  
      
  - name: F0_test
    steps:
      - name: Run tests
        run: cd soMedia && python3 manage.py test  
    
  - name: F0_deploy
    execute_permission:
      - name: permit web-srv
        run: chmod 600 web-srv
    vm_steps:
      - name: copy web-srv
        run: cp /bakerx/web-srv .ssh/
      - name: permit web-srv in VM
        run: chmod 600 .ssh/web-srv
      - name: Copy cloud_agent/index.js from shared folder
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv" -r /bakerx/agent/ droplet_path:~
      - name: copy inventory
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv" -r /bakerx/inventory.json droplet_path:~/agent/
    droplet_steps:
      - name: Remove soMedia
        run: rm -rf soMedia
      - name: Install python 3.0
        run: sudo apt install python3.8
      - name: Clone the Django Project
        run: git clone https://github.com/MeNsaaH/soMedia.git
      - name: Update Apt
        run: sudo apt update
      - name: Install pip
        run: sudo apt install python3-pip
      - name: Install enviornment
        run:  cd soMedia && sudo apt install python3.8-venv
      - name: Create enviornment
        run: cd soMedia && python3 -m venv venv/
      - name: Activate enviornment
        run: cd soMedia && source venv/bin/activate
      - name: Install django
        run: python3 -m pip install django==2.2.13
      - name: Install pillow
        run: python3 -m pip install install pillow
      - name: Install pytz
        run: python3 -m pip install pytz==2019.1
      - name: Install sqlparse
        run: python3 -m pip install sqlparse==0.3.0 
      - name: Make migrations
        run: cd soMedia && python3 manage.py makemigrations
      - name: Migrate
        run: cd soMedia && python3 manage.py migrate 
      - name: Run the django webapp
        run: cd soMedia && python3 manage.py runserver 0.0.0.0:8000 


  - name: react_stats
    execute_permission:
      - name: permit web-srv
        run: chmod 600 web-srv
    monitor_steps:
      - name: apt update
        run: sudo apt-get update
      - name: Install nodejs 
        run: sudo apt install nodejs
      - name: Install npm
        run: sudo apt install npm -y
      - name: Install forever
        run: sudo npm install forever -g
      - name: Install redis server
        run: sudo apt-get install redis-server -y
      - name: Install packages
        run: cd agent && npm install
      - name: NPM link
        run: cd agent && npm link
      - name: Stop all process
        run: cd agent && forever stopall
      - name: Run the process
        run: cd agent && node agent.js react_app

  - name: django_stats
    execute_permission:
      - name: permit web-srv
        run: chmod 600 web-srv
    monitor_steps:
      - name: apt update
        run: sudo apt-get update
      - name: Install nodejs 
        run: sudo apt install nodejs
      - name: Install npm
        run: sudo apt install npm -y
      - name: Install forever
        run: sudo npm install forever -g
      - name: Install redis server
        run: sudo apt-get install redis-server -y
      - name: Install packages
        run: cd agent && npm install
      - name: NPM link
        run: cd agent && npm link
      - name: Stop all process
        run: cd agent && forever stopall
      - name: Run the process
        run: cd agent && node agent.js django_app

  - name: vehicle-build
    steps:
      - name: Remove old repo
        run:  rm -rf search_filter
      - name: Clone the repository
        run:  git clone https://token@github.com/GavBaros/search_filter.git
      - name: Install requirements
        run: cd search_filter && npm install
      - name: Run build
        run: cd search_filter && npm run build

  - name: vehicle-test
    steps:
      - name: Run tests
        run: cd search_filter && CI=true npm test 

  - name: vehicle-deploy
    execute_permission:
      - name: permit web-srv
        run: chmod 600 web-srv
    vm_steps:
      - name: copy web-srv
        run: cp /bakerx/web-srv .ssh/
      - name: permit web-srv in VM
        run: chmod 600 .ssh/web-srv
      - name: Copy cloud_agent/index.js from shared folder
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv" -r /bakerx/agent/ droplet_path:~
      - name: copy inventory
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv" -r /bakerx/inventory.json droplet_path:~/agent/
      - name: Copying the repository to the droplet
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv" -r search_filter/build/ droplet_path:~
    droplet_steps:
      - name: Apt update
        run: sudo apt-get update -y
      - name: Install requirements
        run: sudo apt-get install npm -y && sudo npm install && npm install -g serve
      - name: Run the application
        run: serve -s build

  - name: monitor-deploy
    execute_permission:
      - name: permit web-srv
        run: chmod 600 web-srv
    vm_steps: 
      - name: copy web-srv
        run: cp /bakerx/web-srv .ssh/
      - name: permit web-srv in VM
        run: chmod 600 .ssh/web-srv
      - name: Copy redis.conf from shared folder
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv" /bakerx/redis.conf droplet_path:~
      - name: Copy Dashboard folder in the droplet
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv" -r /bakerx/Monitoring/dashboard droplet_path:~
      - name: Add 
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv" -r /bakerx/Monitoring/dashboard/package.json droplet_path:~
      - name: Copy inventory.json
        run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv" -r /bakerx/inventory.json droplet_path:~
    droplet_steps:
      - name: apt update
        run: sudo apt-get update
      - name: Install nodejs 
        run: sudo apt install nodejs
      - name: Install npm
        run: sudo apt install npm -y
      - name: Install forever
        run: sudo npm install forever -g
      - name: Install redis server
        run: sudo apt-get install redis-server -y
      - name: Start redis server
        run: sudo service redis-server stop ; sudo service redis-server start
      - name: Copy redis.conf from home to the required location in redis
        run: cp /root/redis.conf /etc/redis/
      - name: Restart redis server
        run: sudo service redis-server restart
      # - name: Copy Dashboard folder in the droplet
      #   run: scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ".ssh/web-srv " -r /bakerx/Monitoring/dashboard root@137.184.29.29:~
      - name: npm install for dashboard
        run: bash -c "cd dashboard ; npm install"
      - name: run 
        run: cd dashboard && node bin/www 
    




